@page "/Admin/Category/Index"

@inject DataDbContext dbContext;
@inject IJSRuntime JSRuntime
@layout AdminLayout



<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Categories</h1>
    <a href="/Admin/Category/Upsert" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
        <i class="fas fa-plus fa-sm text-white-50"></i> Add Category
    </a>
</div>

<!-- Content Row -->
<div class="row">
    <div class="col-lg-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Category List</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Slug</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (categories == null)
                            {
                                <tr>
                                    <td colspan="4" class="text-center">Loading...</td>
                                </tr>
                            }
                            else if (!categories.Any())
                            {
                                <tr>
                                    <td colspan="4" class="text-center">No categories found.</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var category in categories)
                                {
                                    <tr>
                                        <td>@category.Id</td>
                                        <td>@category.Name</td>
                                        <td>@category.Description</td>
                                        <td>@category.slug</td>
                                        <td>
                                            <a href="/Admin/Category/Upsert/@category.Id" id="@category.Id" class="btn btn-sm btn-primary">
                                                <i class="fas fa-edit"></i> Edit
                                            </a>
                                            <button class="btn btn-sm btn-danger" @onclick="() => OnDeleteClick(category.Id)">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal (for each row, adjust ID dynamically) -->
<div class="modal fade" id="deleteModal1" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the category "Remote Jobs"?
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <a class="btn btn-danger" href="#">Delete</a>
            </div>
        </div>
    </div>
</div>

@code {

    private List<Category> categories = new List<Category>();
    private string Message { get; set; }
    private string MessageType { get; set; }
    private int DeleteCategoryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await dbContext.Categories.ToListAsync();

    }

    private async Task OnDeleteClick(int id)
    {
        Console.WriteLine($"Delete button clicked for ID: {id}"); // Debug log
        DeleteCategoryId = id;
        await JSRuntime.InvokeVoidAsync("$('#deleteModal').modal", "show");
    }

    private async Task ConfirmDelete()
    {
        try
        {
            Console.WriteLine($"ConfirmDelete called for ID: {DeleteCategoryId}"); // Debug log
            var category = await dbContext.Categories.FindAsync(DeleteCategoryId);
            if (category == null)
            {
                Message = "Category not found.";
                MessageType = "danger";
            }
            else
            {
                dbContext.Categories.Remove(category);
                await dbContext.SaveChangesAsync();
                categories = await dbContext.Categories.ToListAsync();
                Message = "Category deleted successfully.";
                MessageType = "success";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error deleting category: {ex.Message}";
            MessageType = "danger";
        }
        await JSRuntime.InvokeVoidAsync("$('#deleteModal').modal", "hide");
        StateHasChanged();
    }
}
